package com.kostApp.kostApp.DAO;

import com.kostApp.kostApp.models.Discussion;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.jdbc.core.JdbcTemplate;
import org.springframework.jdbc.core.RowMapper;
import org.springframework.stereotype.Controller;

import java.sql.ResultSet;
import java.sql.SQLException;

/**
 * class with implementation operation with discussion storage database
 */
@Controller
public class DiscussionDAO {

    @Autowired
    private JdbcTemplate jdbcTemplate;

    /**
     * method execute SQL command for create table for messages in discussion with next column:
     * id
     * discussion_id - have foreign key on table with discussion
     * message - have text message
     * created_at - have time when user sent message
     * user_id - have foreign key on user, who send message
     *
     * @param discussion - for take name of discussion and generate name of message table
     */
    public void createTable(Discussion discussion){

        String nameOfTable = discussion.getName().replace(" ","_") + "_messages";
        String SQL = "CREATE TABLE " + nameOfTable+"(\n" +
                "    id int PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY ,\n" +
                "    discussion_id int NOT NULL REFERENCES discussions(id),\n" +
                "    message varchar ,\n" +
                "    created_at TIMESTAMP,\n" +
                "    user_id int REFERENCES users(id) " +
                ")";

        jdbcTemplate.execute(SQL);

    }

    /**
     * method execute SQL command for delete table from database where storage message from chose discussion
     *
     * @param discussion - for take name of discussion and generate name of message table
     */
    public void dropTable(Discussion discussion){

        String nameOfTable = discussion.getName().replace(' ','_') + "_messages";
        String SQL = "DROP TABLE " + nameOfTable;
        jdbcTemplate.execute(SQL);

    }
}



